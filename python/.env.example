# Python Development Environment Configuration
#
# IMPORTANT: Copy this file to .env and customize for your system
#            The WORKSPACE_PATH is REQUIRED - no fallback provided!
#
# cp .env.example .env

# =============================================================================
# WORKSPACE CONFIGURATION (REQUIRED)
# =============================================================================
# Path to your development workspace directory
# This directory will be mounted as /workspace inside the container
WORKSPACE_PATH=/home/user/development

# =============================================================================
# PYTHON CONFIGURATION (OPTIONAL)
# =============================================================================
# Python version to use (default: 3.11)
# Available versions: 3.8, 3.9, 3.10, 3.11, 3.12, 3.13
# You can also use specific tags like: 3.11-slim, 3.11-alpine
PYTHON_VERSION=3.11

# Container name (default: python-dev-container)
CONTAINER_NAME=python-dev-container

# =============================================================================
# USER CONFIGURATION (OPTIONAL)
# =============================================================================
# User and group IDs for file ownership (default: 1000:1000)
# Should match your host user to avoid permission issues
PUID=1000
PGID=1000

# =============================================================================
# TIMEZONE CONFIGURATION (OPTIONAL)
# =============================================================================
# Timezone for the container (default: UTC)
# Examples: Europe/London, America/New_York, Asia/Tokyo
TZ=UTC

# =============================================================================
# RESOURCE LIMITS (OPTIONAL)
# =============================================================================
# Prevent runaway Python processes from consuming all system resources
# Defaults are set to 80% of typical development machine (8GB RAM, 4 CPUs)

# Memory limits (examples: 1G, 2048M, 512M)
MEMORY_LIMIT=6400M           # Maximum memory (default: ~6.4GB)
MEMORY_RESERVATION=512M      # Minimum guaranteed memory (default: 512MB)

# CPU limits (examples: 1.0, 2.5, 0.5)
CPU_LIMIT=3.2               # Maximum CPU cores (default: 3.2 cores)
CPU_RESERVATION=0.5         # Minimum guaranteed CPU (default: 0.5 cores)

# =============================================================================
# AUTOMATIC SYSTEM DETECTION (ADVANCED)
# =============================================================================
# To automatically set limits to 80% of your system resources, run these commands
# and use the output values above:
#
# Memory (80% of total):
# echo "MEMORY_LIMIT=$(($(grep MemTotal /proc/meminfo | awk '{print $2}') * 80 / 100 / 1024))M"
#
# CPU (80% of total):  
# echo "CPU_LIMIT=$(echo "$(nproc) * 0.8" | bc)"
#
# Example output for 16GB/8-core system:
# MEMORY_LIMIT=12800M
# CPU_LIMIT=6.4

# =============================================================================
# GIT CONFIGURATION (OPTIONAL)
# =============================================================================
# Uncomment the git volume mounts in compose.yaml if you want to:
# - Use your host Git configuration inside the container
# - Access private repositories via SSH keys
# - Maintain consistent Git identity across host and container
#
# The following paths will be mounted if enabled:
# - ~/.gitconfig (Git configuration)
# - ~/.git-credentials (Git credentials) 
# - ~/.ssh (SSH keys for Git operations)
#
# Note: Ensure your SSH keys have appropriate permissions (600/700)

# =============================================================================
# EXAMPLE DIRECTORY STRUCTURE
# =============================================================================
# Based on the above configuration, your directory structure might look like:
#
# /home/user/
# ├── development/           # WORKSPACE_PATH
# │   ├── project1/
# │   │   ├── main.py
# │   │   ├── requirements.txt
# │   │   └── setup.py
# │   ├── project2/
# │   └── notebooks/
# │       └── analysis.ipynb
# ├── .gitconfig             # Optional Git config
# ├── .git-credentials       # Optional Git credentials
# └── .ssh/                  # Optional SSH keys
#     ├── id_rsa
#     ├── id_rsa.pub
#     └── known_hosts
#
# Ensure workspace directory is owned by your user:
# sudo chown -R $USER:$USER /home/user/development